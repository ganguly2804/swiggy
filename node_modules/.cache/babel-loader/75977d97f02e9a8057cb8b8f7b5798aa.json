{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\swiggy\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, Button, Row, Col, Form, FormControl } from \"react-bootstrap\";\nimport * as styles from \"./Login.module.css\";\nimport { storeCredentials, storeData, setUserDetails } from \"../../redux/Ordering/ordering-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    storeCredentials,\n    storeData,\n    setUserDetails\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const history = useHistory();\n\n  const getToken = async () => {\n    try {\n      const body = {\n        email: email,\n        password: password\n      };\n      await axios.post('https://reqres.in/api/articles', {\n        body\n      }).then(response => {\n        console.log(\"Response received: \", response.data);\n        const credentials = {\n          email: email,\n          password: password,\n          token: response.data.id\n        };\n        storeCredentials(credentials);\n        storeData();\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onLoginClick = async () => {\n    try {\n      const body = {\n        email: email,\n        password: password\n      };\n      const tokenData = await postLogin(body);\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(email, \" \", password);\n\n    if (email != \"\" && password != \"\") {\n      const dataValues = JSON.parse(localStorage.getItem(email));\n\n      if (dataValues != null) {\n        const actualPassword = dataValues.credentials.password;\n\n        if (password == actualPassword) {\n          setUserDetails(dataValues);\n          history.push('/');\n        } else {\n          setErrorMsg(\"Incorrect password\");\n        }\n      } else {\n        setErrorMsg(\"Incorrect Email\");\n      }\n    } else {\n      setErrorMsg(\"Please fill out both fields\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: styles.login__container,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.login__innerContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.login__header,\n            children: \"LOG IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.login__label,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"emailId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"User name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"Enter user name\",\n                  value: email,\n                  onChange: onChangeEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl.Feedback, {\n                  type: \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.login__label,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"passwordId\",\n                className: styles.login__label,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Your password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Enter password\",\n                  value: password,\n                  onChange: onChangePassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.login__button,\n            color: \"primary\",\n            onClick: onLoginClick,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2\",\n            style: {\n              marginBottom: \"0px\"\n            },\n            children: [\"Don't have account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.login__error,\n            children: errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"kP5uElcRmJk9m5LTSwT1pUJJahc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeCredentials: item => dispatch(storeCredentials(item)),\n    storeData: () => dispatch(storeData()),\n    setUserDetails: item => dispatch(setUserDetails(item))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/GitHub/swiggy/src/components/Login/Login.js"],"names":["React","useState","connect","useHistory","Link","axios","Container","Button","Row","Col","Form","FormControl","styles","storeCredentials","storeData","setUserDetails","Login","email","setEmail","password","setPassword","errorMsg","setErrorMsg","history","getToken","body","post","then","response","console","log","data","credentials","token","id","e","onChangeEmail","target","value","onChangePassword","onLoginClick","tokenData","postLogin","dataValues","JSON","parse","localStorage","getItem","actualPassword","push","login__container","login__innerContainer","login__header","login__label","login__button","marginBottom","login__error","mapDispatchToProps","dispatch","item"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport * as styles from \"./Login.module.css\";\r\nimport { storeCredentials, storeData, setUserDetails } from \"../../redux/Ordering/ordering-actions\";\r\n\r\nconst Login = ({ storeCredentials, storeData, setUserDetails }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const getToken = async () => {\r\n    try {\r\n      const body = {\r\n        email: email,\r\n        password: password\r\n      }\r\n      await axios\r\n        .post('https://reqres.in/api/articles', { body })\r\n        .then(response => {\r\n          console.log(\"Response received: \", response.data);\r\n          const credentials = {\r\n            email: email,\r\n            password: password,\r\n            token: response.data.id\r\n          };\r\n          storeCredentials(credentials);\r\n          storeData();\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const onChangeEmail = e => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onLoginClick = async () => {\r\n    try {\r\n      const body = {\r\n        email: email,\r\n        password: password\r\n      }\r\n      const tokenData = await postLogin(body);\r\n\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n\r\n    console.log(email, \" \", password);\r\n    if (email != \"\" && password != \"\") {\r\n      const dataValues = JSON.parse(localStorage.getItem(email));\r\n      if (dataValues != null) {\r\n        const actualPassword = dataValues.credentials.password;\r\n        if (password == actualPassword) {\r\n          setUserDetails(dataValues);\r\n          history.push('/');\r\n        } else {\r\n          setErrorMsg(\"Incorrect password\");\r\n        }\r\n      } else {\r\n        setErrorMsg(\"Incorrect Email\");\r\n      }\r\n    } else {\r\n      setErrorMsg(\"Please fill out both fields\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className={styles.login__container}>\r\n        <Col md=\"5\">\r\n          <div className={styles.login__innerContainer}>\r\n            <h1 className={styles.login__header}>LOG IN</h1>\r\n            <Form>\r\n              <div className={styles.login__label}>\r\n                <Form.Group controlId=\"emailId\">\r\n                  <Form.Label>User name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter user name\"\r\n                    value={email}\r\n                    onChange={onChangeEmail}\r\n                  />\r\n                  <FormControl.Feedback type=\"invalid\"></FormControl.Feedback>\r\n                </Form.Group>\r\n              </div>\r\n\r\n              <div className={styles.login__label}>\r\n                <Form.Group controlId=\"passwordId\" className={styles.login__label}>\r\n                  <Form.Label>Your password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\"></Form.Control.Feedback>\r\n                </Form.Group>\r\n              </div>\r\n            </Form>\r\n            <Button className={styles.login__button} color=\"primary\" onClick={onLoginClick}>Login</Button>\r\n            <p className=\"mt-2\" style={{ marginBottom: \"0px\" }}>\r\n              Don't have account? <Link to=\"/signup\">Signup</Link>\r\n            </p>\r\n            <div className={styles.login__error}>\r\n              {errorMsg}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    storeCredentials: (item) => dispatch(storeCredentials(item)),\r\n    storeData: () => dispatch(storeData()),\r\n    setUserDetails: (item) => dispatch(setUserDetails(item))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}
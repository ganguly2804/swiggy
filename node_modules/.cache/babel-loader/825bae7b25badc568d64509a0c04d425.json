{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\swiggy\\\\src\\\\components\\\\Restaurants\\\\Restaurants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Restaurants.module.css\";\nimport Restaurant from \"./Restaurant/Restaurant\";\nimport { useHistory } from \"react-router-dom\"; //import axios from \"axios\";\n\nimport getRestaurants from \"../../services/getRestaurants\";\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport { act } from \"react-dom/test-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Restaurants = _ref => {\n  _s();\n\n  let {\n    credentials\n  } = _ref;\n  const [restaurants, setRestaurants] = useState([]);\n  const [dataFetched, setDataFetched] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const history = useHistory();\n\n  const fetchRestaurants = async () => {\n    try {\n      if (credentials != null) {\n        const token = credentials.jwt;\n        const response = await getRestaurants(token);\n        const responseData = response.data; //console.log(response);\n\n        const restaurantsArr = [];\n        responseData.forEach(item => {\n          restaurantsArr.push(item);\n        });\n        act(() => {\n          setRestaurants(restaurantsArr);\n          setDataFetched(true);\n        });\n      } else {\n        // const token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InNoYXphbUBnbWFpbC5jb20iLCJzY29wZSI6ImN1c3RvbWVyIiwiYmF0Y2giOiIyMDIxIiwianRpIjoiYmFmMmNlNmYtZDBmMS00MWQxLWE1NTQtMDQ4YzBiNjI3MDViIiwiaWF0IjoxNjQxNjQwNTgyLCJleHAiOjE2NDE2NTQ5ODJ9.Rkd_4qMPiR-z_NUuTD7SUswVRGZs8NSw1WHigOKhwTM\";\n        // const response = await getRestaurants(token);\n        // const responseData = response.data;\n        // //console.log(response);\n        // const restaurantsArr = [];\n        // (responseData).forEach((item) => {\n        //   restaurantsArr.push(item);\n        // });\n        // act(() => {\n        //   setRestaurants(restaurantsArr);\n        //   setDataFetched(true);\n        // })\n        history.push('/login');\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    fetchRestaurants(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.restaurants__container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filter__container,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.filter,\n        type: \"text\",\n        placeholder: \"Search Restaurant\",\n        value: searchInput,\n        onChange: event => setSearchInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.restaurants,\n      children: dataFetched ? restaurants.filter(restaurant => restaurant.name.toLowerCase().includes(searchInput.toLowerCase()) || searchInput === \"\").map(restaurant => /*#__PURE__*/_jsxDEV(Restaurant, {\n        \"data-testid\": \"restaurant\",\n        restaurant: restaurant\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(ReactBootStrap.Spinner, {\n        \"data-testid\": \"loading\",\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Restaurants, \"gVHVu9iv44SVYVgoOPx5H12Piok=\", false, function () {\n  return [useHistory];\n});\n\n_c = Restaurants;\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    credentials: state.orders.credentials\n  };\n};\n\nexport default connect(mapStateToProps, null)(Restaurants);\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["D:/GitHub/swiggy/src/components/Restaurants/Restaurants.js"],"names":["React","useEffect","useState","connect","styles","Restaurant","useHistory","getRestaurants","ReactBootStrap","act","Restaurants","credentials","restaurants","setRestaurants","dataFetched","setDataFetched","searchInput","setSearchInput","history","fetchRestaurants","token","jwt","response","responseData","data","restaurantsArr","forEach","item","push","e","console","log","restaurants__container","filter__container","filter","event","target","value","restaurant","name","toLowerCase","includes","map","id","mapStateToProps","state","orders"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Restaurants.module.css\";\r\nimport Restaurant from \"./Restaurant/Restaurant\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import axios from \"axios\";\r\nimport getRestaurants from \"../../services/getRestaurants\";\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst Restaurants = ({ credentials }) => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [dataFetched, setDataFetched] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const fetchRestaurants = async () => {\r\n    try {\r\n      if (credentials != null) {\r\n        const token = credentials.jwt;\r\n        const response = await getRestaurants(token);\r\n        const responseData = response.data;\r\n        //console.log(response);\r\n        const restaurantsArr = [];\r\n        (responseData).forEach((item) => {\r\n          restaurantsArr.push(item);\r\n        });\r\n        act(() => {\r\n          setRestaurants(restaurantsArr);\r\n          setDataFetched(true);\r\n        })\r\n      } else {\r\n        // const token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InNoYXphbUBnbWFpbC5jb20iLCJzY29wZSI6ImN1c3RvbWVyIiwiYmF0Y2giOiIyMDIxIiwianRpIjoiYmFmMmNlNmYtZDBmMS00MWQxLWE1NTQtMDQ4YzBiNjI3MDViIiwiaWF0IjoxNjQxNjQwNTgyLCJleHAiOjE2NDE2NTQ5ODJ9.Rkd_4qMPiR-z_NUuTD7SUswVRGZs8NSw1WHigOKhwTM\";\r\n        // const response = await getRestaurants(token);\r\n        // const responseData = response.data;\r\n        // //console.log(response);\r\n        // const restaurantsArr = [];\r\n        // (responseData).forEach((item) => {\r\n        //   restaurantsArr.push(item);\r\n        // });\r\n        // act(() => {\r\n        //   setRestaurants(restaurantsArr);\r\n        //   setDataFetched(true);\r\n        // })\r\n        history.push('/login');\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRestaurants();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.restaurants__container}>\r\n      <div className={styles.filter__container}>\r\n        <input className={styles.filter} type=\"text\" placeholder=\"Search Restaurant\" value={searchInput}\r\n          onChange={event => setSearchInput(event.target.value)} />\r\n      </div>\r\n      <div className={styles.restaurants}>\r\n        {\r\n          dataFetched ?\r\n            restaurants.filter(restaurant => restaurant.name.toLowerCase().includes(searchInput.toLowerCase()) || searchInput === \"\")\r\n              .map(restaurant => (\r\n                <Restaurant data-testid=\"restaurant\" key={restaurant.id} restaurant={restaurant} />\r\n              ))\r\n            : (<ReactBootStrap.Spinner data-testid=\"loading\" animation=\"border\" />)\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    credentials: state.orders.credentials,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Restaurants);"]},"metadata":{},"sourceType":"module"}
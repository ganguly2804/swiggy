{"ast":null,"code":"var _jsxFileName = \"D:\\\\SwiggyApp\\\\swiggy\\\\src\\\\components\\\\Products\\\\Product\\\\Product.js\";\n\n/* eslint-disable */\nimport React from \"react\";\nimport styles from \"./Product.module.css\";\nimport { connect } from \"react-redux\";\nimport { addToCart, storeData } from \"../../../redux/Ordering/ordering-actions\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport VegLogo from \"../../../imgs/veg.png\";\nimport NonVegLogo from \"../../../imgs/nonveg.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = _ref => {\n  let {\n    product,\n    addToCart,\n    storeData\n  } = _ref;\n\n  const addItemToCart = () => {\n    addToCart(product);\n    storeData();\n  };\n\n  const vegOrNonvegLogo = product.isVeg == 1 ? VegLogo : NonVegLogo;\n  const altText = product.isVeg == 1 ? \"Veg\" : \"Non-veg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.product,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.product__details,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.product__isVeg,\n        src: vegOrNonvegLogo,\n        alt: altText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.details__title,\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.details__desc,\n        children: [\"Category: \", product.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.details__price,\n        children: [\"Rs. \", product.price / 100]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.product__button,\n      children: [/*#__PURE__*/_jsxDEV(ReactImageFallback, {\n        className: styles.product__image,\n        src: `https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_508,h_320,c_fill/${product.cloudinaryImageId}`,\n        fallbackImage: \"http://www.food.jibli.ma/assets/images/default-food-image-large.png\",\n        initialImage: \"https://i.stack.imgur.com/FsMtu.gif\",\n        alt: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItemToCart,\n        className: `${styles.button__btn} ${styles.buttons__add}`,\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: item => dispatch(addToCart(item)),\n    storeData: () => dispatch(storeData())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["D:/SwiggyApp/swiggy/src/components/Products/Product/Product.js"],"names":["React","styles","connect","addToCart","storeData","ReactImageFallback","VegLogo","NonVegLogo","Product","product","addItemToCart","vegOrNonvegLogo","isVeg","altText","product__details","product__isVeg","details__title","name","details__desc","category","details__price","price","product__button","product__image","cloudinaryImageId","button__btn","buttons__add","mapDispatchToProps","dispatch","item"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,0CAArC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,OAAO,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,OAAF;AAAWN,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,GAAsC;;AAErD,QAAMM,aAAa,GAAG,MAAM;AAC1BP,IAAAA,SAAS,CAACM,OAAD,CAAT;AACAL,IAAAA,SAAS;AACV,GAHD;;AAKA,QAAMO,eAAe,GAAGF,OAAO,CAACG,KAAR,IAAiB,CAAjB,GAAqBN,OAArB,GAA+BC,UAAvD;AACA,QAAMM,OAAO,GAAGJ,OAAO,CAACG,KAAR,IAAiB,CAAjB,GAAqB,KAArB,GAA6B,SAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACQ,OAAvB;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACa,gBAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEb,MAAM,CAACc,cAAvB;AAAuC,QAAA,GAAG,EAAEJ,eAA5C;AAA6D,QAAA,GAAG,EAAEE;AAAlE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAEZ,MAAM,CAACe,cAArB;AAAA,kBAAsCP,OAAO,CAACQ;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAEhB,MAAM,CAACiB,aAArB;AAAA,iCAA+CT,OAAO,CAACU,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAG,QAAA,SAAS,EAAElB,MAAM,CAACmB,cAArB;AAAA,2BAA0CX,OAAO,CAACY,KAAR,GAAgB,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAK,MAAA,SAAS,EAAEpB,MAAM,CAACqB,eAAvB;AAAA,8BACE,QAAC,kBAAD;AACE,QAAA,SAAS,EAAErB,MAAM,CAACsB,cADpB;AAEE,QAAA,GAAG,EAAG,4FAA2Fd,OAAO,CAACe,iBAAkB,EAF7H;AAGE,QAAA,aAAa,EAAC,qEAHhB;AAIE,QAAA,YAAY,EAAC,qCAJf;AAKE,QAAA,GAAG,EAAEf,OAAO,CAACQ;AALf;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,OAAO,EAAEP,aADX;AAEE,QAAA,SAAS,EAAG,GAAET,MAAM,CAACwB,WAAY,IAAGxB,MAAM,CAACyB,YAAa,EAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArCD;;KAAMlB,O;;AAuCN,MAAMmB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLzB,IAAAA,SAAS,EAAG0B,IAAD,IAAUD,QAAQ,CAACzB,SAAS,CAAC0B,IAAD,CAAV,CADxB;AAELzB,IAAAA,SAAS,EAAE,MAAMwB,QAAQ,CAACxB,SAAS,EAAV;AAFpB,GAAP;AAID,CALD;;AAOA,eAAeF,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCnB,OAAlC,CAAf","sourcesContent":["/* eslint-disable */\r\nimport React from \"react\";\r\nimport styles from \"./Product.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart, storeData } from \"../../../redux/Ordering/ordering-actions\";\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport VegLogo from \"../../../imgs/veg.png\";\r\nimport NonVegLogo from \"../../../imgs/nonveg.png\";\r\n \r\nconst Product = ({ product, addToCart, storeData }) => {\r\n \r\n  const addItemToCart = () => {\r\n    addToCart(product);\r\n    storeData();\r\n  }\r\n \r\n  const vegOrNonvegLogo = product.isVeg == 1 ? VegLogo : NonVegLogo;\r\n  const altText = product.isVeg == 1 ? \"Veg\" : \"Non-veg\";\r\n \r\n  return (\r\n    <div className={styles.product}>\r\n \r\n      <div className={styles.product__details}>\r\n        <img className={styles.product__isVeg} src={vegOrNonvegLogo} alt={altText} />\r\n        <p className={styles.details__title}>{product.name}</p>\r\n        <p className={styles.details__desc}>Category: {product.category}</p>\r\n        <p className={styles.details__price}>Rs. {product.price / 100}</p>\r\n      </div>\r\n \r\n      <div className={styles.product__button}>\r\n        <ReactImageFallback\r\n          className={styles.product__image}\r\n          src={`https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_508,h_320,c_fill/${product.cloudinaryImageId}`}\r\n          fallbackImage=\"http://www.food.jibli.ma/assets/images/default-food-image-large.png\"\r\n          initialImage=\"https://i.stack.imgur.com/FsMtu.gif\"\r\n          alt={product.name}\r\n        />\r\n        <button\r\n          onClick={addItemToCart}\r\n          className={`${styles.button__btn} ${styles.buttons__add}`}\r\n        >\r\n          Add To Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (item) => dispatch(addToCart(item)),\r\n    storeData: () => dispatch(storeData()),\r\n  };\r\n};\r\n \r\nexport default connect(null, mapDispatchToProps)(Product);"]},"metadata":{},"sourceType":"module"}
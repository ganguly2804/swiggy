{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\swiggy\\\\src\\\\components\\\\Signup\\\\Signup.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, Button, Row, Col, Form, FormControl } from \"react-bootstrap\";\nimport * as styles from \"./Signup.module.css\";\nimport { storeCredentials, storeData, setUserDetails } from \"../../redux/Ordering/ordering-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = _ref => {\n  _s();\n\n  let {\n    storeCredentials,\n    storeData,\n    setUserDetails\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const history = useHistory();\n\n  const getToken = async () => {\n    try {\n      const body = {\n        username: username,\n        password: password\n      };\n      await axios.post('https://reqres.in/api/articles', {\n        body\n      }).then(response => {\n        console.log(\"Response received: \", response.data);\n        const credentials = {\n          username: username,\n          password: password,\n          token: response.data.id\n        };\n        storeCredentials(credentials);\n        storeData();\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePasswordRepeat = e => {\n    setPasswordRepeat(e.target.value);\n  };\n\n  const onSignupClick = () => {\n    console.log(username, \" \", password);\n\n    if (username != \"\" && password != \"\" && password != \"\") {\n      const dataValues = JSON.parse(localStorage.getItem(username));\n\n      if (dataValues == null) {\n        if (password.length > 2) {\n          if (password == passwordRepeat) {\n            getToken();\n            history.push('/');\n          } else {\n            setErrorMsg(\"Passwords do not match\");\n          }\n        } else {\n          setErrorMsg(\"Password should have more than 2 characters\");\n        }\n      } else {\n        setErrorMsg(\"Username already exists\");\n      }\n    } else {\n      setErrorMsg(\"Please fill out all fields\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: styles.signup__container,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.signup__innerContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.signup__header,\n            children: \"SIGN UP  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.signup__label,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"usernameId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"User name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"username\",\n                  placeholder: \"Enter user name\",\n                  value: username,\n                  onChange: onChangeUsername\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl.Feedback, {\n                  type: \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.signup__label,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"passwordId\",\n                className: styles.signup__label,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Your new password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Enter a password\",\n                  value: password,\n                  onChange: onChangePassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"passwordId\",\n                className: styles.signup__label,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Confirm password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Re-enter password\",\n                  value: passwordRepeat,\n                  onChange: onChangePasswordRepeat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.signup__button,\n            color: \"primary\",\n            onClick: onSignupClick,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2\",\n            style: {\n              margin: \"0px\"\n            },\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.signup__error,\n            children: errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"70Sb91sgKg53pGRmL8ar8u7ixxU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeCredentials: item => dispatch(storeCredentials(item)),\n    storeData: () => dispatch(storeData()),\n    setUserDetails: item => dispatch(setUserDetails(item))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/GitHub/swiggy/src/components/Signup/Signup.js"],"names":["React","useState","connect","useHistory","Link","axios","Container","Button","Row","Col","Form","FormControl","styles","storeCredentials","storeData","setUserDetails","Signup","username","setUsername","password","setPassword","passwordRepeat","setPasswordRepeat","errorMsg","setErrorMsg","history","getToken","body","post","then","response","console","log","data","credentials","token","id","e","onChangeUsername","target","value","onChangePassword","onChangePasswordRepeat","onSignupClick","dataValues","JSON","parse","localStorage","getItem","length","push","signup__container","signup__innerContainer","signup__header","signup__label","signup__button","margin","signup__error","mapDispatchToProps","dispatch","item"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport * as styles from \"./Signup.module.css\";\r\nimport { storeCredentials, storeData, setUserDetails } from \"../../redux/Ordering/ordering-actions\";\r\n \r\nconst Signup = ({ storeCredentials, storeData, setUserDetails }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\r\n \r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n \r\n  const history = useHistory();\r\n \r\n  const getToken = async () => {\r\n    try {\r\n      const body = {\r\n        username: username,\r\n        password: password\r\n      }\r\n      await axios\r\n        .post('https://reqres.in/api/articles', { body })\r\n        .then(response => {\r\n          console.log(\"Response received: \", response.data);\r\n          const credentials = {\r\n            username: username,\r\n            password: password,\r\n            token: response.data.id\r\n          };\r\n          storeCredentials(credentials);\r\n          storeData();\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n \r\n  const onChangeUsername = e => {\r\n    setUsername(e.target.value);\r\n  };\r\n \r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n \r\n  const onChangePasswordRepeat = e => {\r\n    setPasswordRepeat(e.target.value);\r\n  };\r\n \r\n  const onSignupClick = () => {\r\n    console.log(username, \" \", password);\r\n    if (username != \"\" && password != \"\" && password != \"\") {\r\n      const dataValues = JSON.parse(localStorage.getItem(username));\r\n      if (dataValues == null) {\r\n        if (password.length > 2) {\r\n          if (password == passwordRepeat) {\r\n            getToken();\r\n            history.push('/');\r\n          } else {\r\n            setErrorMsg(\"Passwords do not match\");\r\n          }\r\n        } else {\r\n          setErrorMsg(\"Password should have more than 2 characters\");\r\n        }\r\n      } else {\r\n        setErrorMsg(\"Username already exists\");\r\n      }\r\n    } else {\r\n      setErrorMsg(\"Please fill out all fields\");\r\n    }\r\n  };\r\n \r\n  return (\r\n    <Container>\r\n      <Row className={styles.signup__container}>\r\n        <Col md=\"5\">\r\n          <div className={styles.signup__innerContainer}>\r\n            <h1 className={styles.signup__header}>SIGN UP  </h1>\r\n            <Form>\r\n              <div className={styles.signup__label}>\r\n                <Form.Group controlId=\"usernameId\">\r\n                  <Form.Label>User name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Enter user name\"\r\n                    value={username}\r\n                    onChange={onChangeUsername}\r\n                  />\r\n                  <FormControl.Feedback type=\"invalid\"></FormControl.Feedback>\r\n                </Form.Group>\r\n              </div>\r\n \r\n              <div className={styles.signup__label}>\r\n                <Form.Group controlId=\"passwordId\" className={styles.signup__label}>\r\n                  <Form.Label>Your new password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter a password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\"></Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"passwordId\" className={styles.signup__label}>\r\n                  <Form.Label>Confirm password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Re-enter password\"\r\n                    value={passwordRepeat}\r\n                    onChange={onChangePasswordRepeat}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\"></Form.Control.Feedback>\r\n                </Form.Group>\r\n              </div>\r\n            </Form>\r\n            <Button className={styles.signup__button} color=\"primary\" onClick={onSignupClick}>Signup</Button>\r\n            <p className=\"mt-2\" style={{ margin: \"0px\" }}>\r\n              Already have an account? <Link to=\"/login\">Login</Link>\r\n            </p>\r\n            <div className={styles.signup__error}>\r\n              {errorMsg}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    storeCredentials: (item) => dispatch(storeCredentials(item)),\r\n    storeData: () => dispatch(storeData()),\r\n    setUserDetails: (item) => dispatch(setUserDetails(item))\r\n  };\r\n};\r\n \r\nexport default connect(null, mapDispatchToProps)(Signup);"]},"metadata":{},"sourceType":"module"}
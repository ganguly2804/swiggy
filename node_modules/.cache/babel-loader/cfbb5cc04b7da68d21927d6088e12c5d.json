{"ast":null,"code":"/* eslint-disable */\nimport * as actionTypes from \"./ordering-types\";\nconst INITIAL_STATE = {\n  credentials: null,\n  previousRestaurant: null,\n  currentRestaurant: null,\n  cart: [],\n  currentItem: null,\n  orders: [],\n  addresses: [],\n  currentAddress: null,\n  price: null\n};\n\nconst orderingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  const storeData = () => {\n    const userData = {\n      credentials: state.credentials,\n      cart: state.cart,\n      previousRestaurant: state.previousRestaurant,\n      orders: state.orders,\n      addresses: state.addresses\n    };\n    localStorage.setItem(state.credentials.username, JSON.stringify(userData));\n  };\n\n  const getPreviousRestaurant = data => {\n    if (state.cart.length != 0) {\n      return state.previousRestaurant;\n    }\n\n    return data.previousRestaurant;\n  };\n\n  const getCart = data => {\n    if (state.cart.length != 0) {\n      return state.cart;\n    }\n\n    return data.cart;\n  };\n\n  switch (action.type) {\n    case actionTypes.LOGOUT:\n      return { ...INITIAL_STATE\n      };\n\n    case actionTypes.STORE_DATA:\n      if (state.credentials != null) storeData();\n      return { ...state\n      };\n\n    case actionTypes.STORE_PRICE:\n      return { ...state,\n        price: action.payload\n      };\n\n    case actionTypes.PLACE_ORDER:\n      const updatedOrders = state.orders;\n\n      if (state.cart.length != 0) {\n        const orderInfo = {\n          restaurant: state.currentRestaurant != null ? state.currentRestaurant : state.previousRestaurant,\n          items: state.cart,\n          price: action.payload,\n          address: state.currentAddress\n        };\n        console.log(orderInfo);\n        updatedOrders.push(orderInfo);\n      }\n\n      return { ...state,\n        cart: [],\n        orders: updatedOrders\n      };\n\n    case actionTypes.STORE_CREDENTIALS:\n      return { ...state,\n        credentials: action.payload\n      };\n\n    case actionTypes.SET_USER_DETAILS:\n      return { ...state,\n        credentials: action.payload.credentials,\n        previousRestaurant: getPreviousRestaurant(action.payload),\n        cart: getCart(action.payload),\n        orders: action.payload.orders ? action.payload.orders : [],\n        addresses: action.payload.addresses\n      };\n\n    case actionTypes.LOAD_RESTAURANT_MENU:\n      return { ...state,\n        currentRestaurant: action.payload\n      };\n\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n\n      if (state.previousRestaurant == null || state.currentRestaurant.id != state.previousRestaurant.id) {\n        console.log(\"ID does not match with previous restaurant\");\n        state.cart = [];\n        state.previousRestaurant = state.currentRestaurant;\n      }\n\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, { ...item,\n          qty: 1\n        }]\n      };\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n\n    case actionTypes.ADJUST_ITEM_QTY:\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: +action.payload.qty\n        } : item)\n      };\n\n    case actionTypes.ADD_ADDRESS:\n      return { ...state,\n        addresses: [...state.addresses, action.payload]\n      };\n\n    case actionTypes.SET_ADDRESS:\n      return { ...state,\n        currentAddress: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default orderingReducer;","map":{"version":3,"sources":["D:/SwiggyApp/swiggy/src/redux/Ordering/ordering-reducer.js"],"names":["actionTypes","INITIAL_STATE","credentials","previousRestaurant","currentRestaurant","cart","currentItem","orders","addresses","currentAddress","price","orderingReducer","state","action","storeData","userData","localStorage","setItem","username","JSON","stringify","getPreviousRestaurant","data","length","getCart","type","LOGOUT","STORE_DATA","STORE_PRICE","payload","PLACE_ORDER","updatedOrders","orderInfo","restaurant","items","address","console","log","push","STORE_CREDENTIALS","SET_USER_DETAILS","LOAD_RESTAURANT_MENU","ADD_TO_CART","item","inCart","find","id","map","qty","REMOVE_FROM_CART","filter","ADJUST_ITEM_QTY","ADD_ADDRESS","SET_ADDRESS"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport * as actionTypes from \"./ordering-types\";\r\n \r\nconst INITIAL_STATE = {\r\n  credentials: null,\r\n  previousRestaurant: null,\r\n  currentRestaurant: null,\r\n  cart: [],\r\n  currentItem: null,\r\n  orders: [],\r\n  addresses: [],\r\n  currentAddress: null,\r\n  price: null,\r\n};\r\n \r\nconst orderingReducer = (state = INITIAL_STATE, action) => {\r\n  const storeData = () => {\r\n    const userData = {\r\n      credentials: state.credentials,\r\n      cart: state.cart,\r\n      previousRestaurant: state.previousRestaurant,\r\n      orders: state.orders,\r\n      addresses: state.addresses,\r\n    };\r\n    localStorage.setItem(state.credentials.username, JSON.stringify(userData));\r\n  };\r\n \r\n  const getPreviousRestaurant = (data) => {\r\n    if (state.cart.length != 0) {\r\n      return state.previousRestaurant;\r\n    }\r\n    return data.previousRestaurant;\r\n  };\r\n \r\n  const getCart = (data) => {\r\n    if (state.cart.length != 0) {\r\n      return state.cart;\r\n    }\r\n    return data.cart;\r\n  }\r\n \r\n  switch (action.type) {\r\n \r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...INITIAL_STATE,\r\n      };\r\n \r\n    case actionTypes.STORE_DATA:\r\n      if (state.credentials != null) storeData();\r\n      return {\r\n        ...state,\r\n      };\r\n \r\n    case actionTypes.STORE_PRICE:\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n \r\n    case actionTypes.PLACE_ORDER:\r\n      const updatedOrders = state.orders;\r\n      if (state.cart.length != 0) {\r\n        const orderInfo = {\r\n          restaurant: state.currentRestaurant != null? state.currentRestaurant : state.previousRestaurant,\r\n          items: state.cart,\r\n          price: action.payload,\r\n          address: state.currentAddress,\r\n        };\r\n        console.log(orderInfo)\r\n        updatedOrders.push(orderInfo);\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: [],\r\n        orders: updatedOrders,\r\n      };\r\n \r\n    case actionTypes.STORE_CREDENTIALS:\r\n      return {\r\n        ...state,\r\n        credentials: action.payload,\r\n      };\r\n \r\n    case actionTypes.SET_USER_DETAILS:\r\n      return {\r\n        ...state,\r\n        credentials: action.payload.credentials,\r\n        previousRestaurant: getPreviousRestaurant(action.payload),\r\n        cart: getCart(action.payload),\r\n        orders: action.payload.orders ? action.payload.orders : [],\r\n        addresses: action.payload.addresses,\r\n      };\r\n \r\n    case actionTypes.LOAD_RESTAURANT_MENU:\r\n      return {\r\n        ...state,\r\n        currentRestaurant: action.payload,\r\n      };\r\n \r\n    case actionTypes.ADD_TO_CART:\r\n      const item = action.payload;\r\n      const inCart = state.cart.find((item) =>\r\n        item.id === action.payload.id ? true : false\r\n      );\r\n      if (state.previousRestaurant == null || state.currentRestaurant.id != state.previousRestaurant.id) {\r\n        console.log(\"ID does not match with previous restaurant\");\r\n        state.cart = [];\r\n        state.previousRestaurant = state.currentRestaurant;\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: inCart\r\n          ? state.cart.map((item) =>\r\n            item.id === action.payload.id\r\n              ? { ...item, qty: item.qty + 1 }\r\n              : item\r\n          )\r\n          : [...state.cart, { ...item, qty: 1 }],\r\n      };\r\n \r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((item) => item.id !== action.payload.id),\r\n      };\r\n \r\n    case actionTypes.ADJUST_ITEM_QTY:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.map((item) =>\r\n          item.id === action.payload.id\r\n            ? { ...item, qty: +action.payload.qty }\r\n            : item\r\n        ),\r\n      };\r\n \r\n    case actionTypes.ADD_ADDRESS:\r\n      return {\r\n        ...state,\r\n        addresses: [...state.addresses, action.payload],\r\n      };\r\n \r\n    case actionTypes.SET_ADDRESS:\r\n      return {\r\n        ...state,\r\n        currentAddress: action.payload,\r\n      };\r\n \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n \r\nexport default orderingReducer;"]},"metadata":{},"sourceType":"module"}
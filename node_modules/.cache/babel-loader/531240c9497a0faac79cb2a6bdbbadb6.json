{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\swiggy\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Container, Button, Row, Col, Form, FormControl } from \"react-bootstrap\";\nimport * as styles from \"./Login.module.css\";\nimport postLogin from \"../../services/postLogin\";\nimport { storeCredentials, storeData, setUserDetails } from \"../../redux/Ordering/ordering-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    storeCredentials,\n    storeData,\n    setUserDetails\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const history = useHistory();\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onLoginClick = async () => {\n    try {\n      const body = {\n        email: email,\n        password: password\n      };\n      console.log(\"Calling postLogin with body: \", JSON.stringify(body));\n      const tokenData = await postLogin(body);\n      console.log(\"Response received: \", tokenData);\n\n      if (\"jwt\" in tokenData) {\n        const credentials = { ...body,\n          name: tokenData.name,\n          jwt: tokenData.jwt\n        }; // Update store state with valid credentials\n\n        storeCredentials(credentials);\n        history.push('/');\n      } else {\n        setErrorMsg(tokenData.message);\n      }\n\n      ;\n    } catch (e) {\n      console.log(e);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: styles.login__container,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.login__innerContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.login__header,\n            children: \"LOG IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.login__label,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"emailId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  \"data-testid\": \"email_label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"email\",\n                  placeholder: \"Enter email\",\n                  value: email,\n                  onChange: onChangeEmail,\n                  \"data-testid\": \"email_input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl.Feedback, {\n                  type: \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.login__label,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"passwordId\",\n                className: styles.login__label,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  \"data-testid\": \"password_label\",\n                  children: \"Your password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Enter password\",\n                  value: password,\n                  onChange: onChangePassword,\n                  \"data-testid\": \"password_input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.login__button,\n            color: \"primary\",\n            onClick: onLoginClick,\n            \"data-testid\": \"submit_button\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2\",\n            style: {\n              marginBottom: \"0px\"\n            },\n            children: [\"Don't have account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.login__error,\n            \"data-testid\": \"error_message\",\n            children: errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"kP5uElcRmJk9m5LTSwT1pUJJahc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeCredentials: item => dispatch(storeCredentials(item)),\n    storeData: () => dispatch(storeData()),\n    setUserDetails: item => dispatch(setUserDetails(item))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/GitHub/swiggy/src/components/Login/Login.js"],"names":["React","useState","connect","useHistory","Link","Container","Button","Row","Col","Form","FormControl","styles","postLogin","storeCredentials","storeData","setUserDetails","Login","email","setEmail","password","setPassword","errorMsg","setErrorMsg","history","onChangeEmail","e","target","value","onChangePassword","onLoginClick","body","console","log","JSON","stringify","tokenData","credentials","name","jwt","push","message","login__container","login__innerContainer","login__header","login__label","login__button","marginBottom","login__error","mapDispatchToProps","dispatch","item"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport * as styles from \"./Login.module.css\";\r\nimport postLogin from \"../../services/postLogin\";\r\nimport { storeCredentials, storeData, setUserDetails } from \"../../redux/Ordering/ordering-actions\";\r\n\r\nconst Login = ({ storeCredentials, storeData, setUserDetails }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const onChangeEmail = e => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onLoginClick = async () => {\r\n    try {\r\n      const body = {\r\n        email: email,\r\n        password: password\r\n      };\r\n      console.log(\"Calling postLogin with body: \", JSON.stringify(body));\r\n      const tokenData = await postLogin(body);\r\n      console.log(\"Response received: \", tokenData);\r\n\r\n      if (\"jwt\" in tokenData) {\r\n        const credentials = {\r\n          ...body,\r\n          name: tokenData.name,\r\n          jwt: tokenData.jwt,\r\n        };\r\n        // Update store state with valid credentials\r\n        storeCredentials(credentials);\r\n        history.push('/');\r\n      } else {\r\n        setErrorMsg(tokenData.message);\r\n      };\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className={styles.login__container}>\r\n        <Col md=\"5\">\r\n          <div className={styles.login__innerContainer}>\r\n            <h1 className={styles.login__header}>LOG IN</h1>\r\n            <Form>\r\n              <div className={styles.login__label}>\r\n                <Form.Group controlId=\"emailId\">\r\n                  <Form.Label data-testid=\"email_label\">Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={onChangeEmail}\r\n                    data-testid=\"email_input\"\r\n                  />\r\n                  <FormControl.Feedback type=\"invalid\"></FormControl.Feedback>\r\n                </Form.Group>\r\n              </div>\r\n\r\n              <div className={styles.login__label}>\r\n                <Form.Group controlId=\"passwordId\" className={styles.login__label}>\r\n                  <Form.Label data-testid=\"password_label\">Your password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                    data-testid=\"password_input\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\"></Form.Control.Feedback>\r\n                </Form.Group>\r\n              </div>\r\n            </Form>\r\n            <Button\r\n              className={styles.login__button}\r\n              color=\"primary\"\r\n              onClick={onLoginClick}\r\n              data-testid=\"submit_button\">\r\n              Login\r\n            </Button>\r\n            <p className=\"mt-2\" style={{ marginBottom: \"0px\" }}>\r\n              Don't have account? <Link to=\"/signup\">Signup</Link>\r\n            </p>\r\n            <div className={styles.login__error} data-testid=\"error_message\">\r\n              {errorMsg}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    storeCredentials: (item) => dispatch(storeCredentials(item)),\r\n    storeData: () => dispatch(storeData()),\r\n    setUserDetails: (item) => dispatch(setUserDetails(item))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}